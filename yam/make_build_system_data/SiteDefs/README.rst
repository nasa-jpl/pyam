========================
README file for SiteDefs
========================

This module contains "site configuration" files that the module Makefiles
include to indicate which compilers, options, libraries, etc. to use
based on the network (YAM_SITE) you are at, the host platform, and the
target platform. The main sub areas under this module are:

 * sites: This directory contains a sub-directory for each supported YaM
     site for this YaM installation. Each such sub-directory contains user
     customizable site specific configuration files.

 * targets: This directory contains a user customizable file for each
     supported target containing build flags specific to the target.

 * mkhome: The contents of this directory are auto-generated by the YaM
     installation process and are not meant to be modified. As such, they
     are marked read-only. The 'overall.mk' file within the shared/
     directory MUST be included in every module's Makefile.yam. It in turn
     includes various other files (including site/target specific ones)
     needed for builds.

While most of these files are for organizing multi-site/multi-target
builds, there are few additional files, eg. Drun etc. which are for
run-time use.


Files for Multi-site/Multi-target builds
========================================

The include dependencies for the various make related fies are as follows::

  Makefile-yam (module level)
      |
      |__ SiteDefs/mkHome/shared/overall.mk
          |
          |__ <top-level>/common/site.env
          |    |
          |    |__ <top-level>/common/yamNative.mk
          |
          |__ SiteDefs/mkHome/shared/localDir.mk
          |
          |__ SiteDefs/mkHome/shared/moduleVars.mk
          |
          |__ SiteDefs/mkHome/shared/bldFlags.mk
          |
          |__ SiteDefs/targets/$(YAM_TARGET).mk
          |
          |__ SiteDefs/mkHome/auto/$(YAM_SITE)-site-supported.mk
          |
          |__ ~/.site-hosts.mk (optional)
          |
          |__ $(MODULE_DIR)/.directives.mk (optional)
          |
          |__ SiteDefs/sites/$(YAM_SITE)/site-config-$(YAM_TARGET) OR
          |
          |     SiteDefs/sites/$(YAM_SITE)/site-config-$(YAM_NATIVE)-$(YAM_TARGET)
          |      |
          |      |__ SiteDefs/sites/$(YAM_SITE)/site.local
          |        |
          |        |__ SiteDefs/shared.mk
          |
          |__ $(MODULE_DIR)/.supported.mk (optional)
          |
          |__ SiteDefs/mkHome/shared/supported.mk
          |
          |__ SiteDefs/mkHome/local-module.mk
          |
          |__ SiteDefs/mkHome/auto/bldRules.mk
          |
          |__ SiteDefs/mkHome/shared/dversion.mk


  Makefile (top level)
      |
      |__ <top-level>/common/site.env
      |    |
      |    |__ <top-level>/common/yamNative.mk
      |
      |__ <top-level>/common/local-common.mk
      |
      |__ SiteDefs/mkHome/auto/$(YAM_SITE)-site-supported.mk
      |
      |__ ~/.site-hosts.mk (optional)
      |
      |__ SiteDefs/mkHome/shared/supported.mk
      |
      |__ <top-level> YAM.config (optional)
      |
      |__ SiteDefs/mkHome/auto/$(YAM_SITE)-site-supported.mk

The purpose of the various files are summarized below.


<module>/Makefile.yam
---------------------
- required for each module
- provides a standard make interface and rules for each module
- these Makefile.yam's are typically just small wrappers around a Makefile in
  the same directory that does the real work
- for outside software that is compiled under "src", a Makefile.yam will
  typically serve as a lightweight gateway to an existing Makefile.
- use the "help" rule to get the available list of targets.
- standard supported rules include "help, yam-mklinks, yam-rmlinks,
  links, depends, libs, libsso, bins, clean".

<top-level>/Makefile
--------------------
- toplevel Makefile with targets "links", "depends", "libs", "bins"
- use the "help" rule to get the available list of targets.
- it runs "make -f Makefile.yam" for these targets in all
  subdirectories of "$YAM_ROOT/src"
  (which are WORK_MODULES in $YAM_ROOT/YAM.config)
- a link to this Makefile gets put in the toplevel $YAM_ROOT directory

SiteDefs/mkHome/shared/overall.mk
---------------------------------
- gets included by all module's Makefile.yam and includes several of
  the files below to set various needed flags.
- each "$YAM_ROOT/src" subdirectory has a Makefile.yam that is
  used by the toplevel Makefile described above

<top-level>/common/site.env
---------------------------
- sets YAM_LINKMOD_RULES with build rules for both work and link modules
- sets YAM_WORKMOD_RULES with build rules for only work modules
- sets YAM_BUILD_RULES with the sub-rules for the 'build' rule
- if undefined, sets YAM_SITE to a default value
- sets YAM_TARGET to YAM_NATIVE if undefined
- sets ALL_YAM_TARGETS for use by other Makefiles
- sets ALL_YAM_OS for use by other Makefiles
- sets YAM_OS to "unix" or "vx"
- sets RSHCMD to the command for accessing remote hosts

<top-level>/common/yamNative.mk
-------------------------------
- determines YAM_NATIVE

SiteDefs/mkHome/shared/localDir.mk
----------------------------------
- sets LOCAL_DIR

SiteDefs/mkHome/shared/moduleVars.mk
------------------------------------
- sets MODULE_DIR to the module directory name
- sets MODULE_NAME to the name of the module
- sets MODULE_TYPE to "link" or "work"

SiteDefs/mkHome/shared/bldFlags.mk
----------------------------------
- initializes CC_DEFINES,  CC_INCLUDES, CC_COMPILE_FLAGS, CC_LIBS,
  CC_LINK_FLAGS (and similarly for CPLUSPLUS variables) with target
  specific values
- sets AR, RANLIB variables

SiteDefs/targets/$(YAM_TARGET).mk (optional)
--------------------------------------------
- custom definitions by the user for the $(YAM_TARGET) target builds

SiteDefs/mkHome/auto/$(YAM_SITE)-site-supported.mk
--------------------------------------------------
- sets SITE_SUPPORTED_TARGETS
- sets COMPILE_HOST-<target> for each supported target for the site

~/.site-hosts.mk (optional)
---------------------------
- sets user preferences for COMPILE_HOST-<target> for the supported
  targets

$(MODULE_DIR)/.directives.mk (optional)
---------------------------------------
- sets module specific build flags

SiteDefs/sites/$(YAM_SITE)/site-config-$(YAM_TARGET) or SiteDefs/sites/$(YAM_SITE)/site-config-$(YAM_NATIVE)-$(YAM_TARGET)
--------------------------------------------------------------------------------------------------------------------------
- custom definitions by the user for the site/target specific builds
- set YAM_SITE to the name of your site to select which config files get used
  default site is "local", hack the files in "site-local" if that is preferred
- these files are named by native CPU and OS, and target CPU and OS.
  examples are::

    site-config-sparc-sunos5
    site-config-hppa-hpux9
    site-config-sparc-sunos4-m68k-vxworks
    etc.

SiteDefs/sites/$(YAM_SITE)/site.local
-------------------------------------
- custom definitions by the user for the site specific builds
- often the site-config-* files for a particular site are almost identical,
  so they may just include a "site.local" in the directory, or "site.gcc"

SiteDefs/shared.mk
------------------
- custom definitions by the user for the project

$(MODULE_DIR)/.supported.mk (optional)
--------------------------------------
- sets MODULE_SUPPORTED_OS, MODULE_UNSUPPORTED_OS
- sets MODULE_SUPPORTED_TARGETS, MODULE_UNSUPPORTED_TARGETS

SiteDefs/mkHome/shared/supported.mk
-----------------------------------
- updates MODULE_SUPPORTED_TARGETS

SiteDefs/mkHome/local-module.mk
--------------------------------
- This is an optional file
- Its purpose is to add to the definitions in bldRules.mk more easily
  without having to go through the whole configuration update process.

SiteDefs/mkHome/auto/bldRules.mk
--------------------------------
- defines most of the key make rules needed by Makefile.yam such as
  "help, yam-mklinks, yam-rmlinks, links, depends ....".
- defines IS_VALID_TARGET

SiteDefs/mkHome/shared/dversion.mk
----------------------------------
- also contains a rule for compiling Dversion.c for tracking module versions
  which can be used if desired.
- defines OBJ_YAMVERSION
- adds -DUSE_YAMVERSION flag to CC_DEFINES
- defines a rule for building YamVersion.o


Files for Multi-site/Multi-target run-time
==========================================

A few utility files are provided here to help avoid the problem of
modifying PATH and other environment variables when a user wants to run
programs from different sandboxes. Avoiding this environment "pollution"
can help avoid confusion that can arise from strange runs from
inconsistent sandboxes and environments. This problem is addressed by
the ``Drun`` fron end script available in the mkHome/auto directory. It is
highly recommended that the user modify the SiteDefs' Makefile.yam to export a
link for this shell script to the top level bin/ directory. The basic usage of
Drun is::

    <sandbox>/bin/Drun [options] <program> <arg1> <arg2> ....

Thus instead of running the program directly, the 'front end program'
Drun is run with the program and its arguments passed as arguments to
Drun. Drun does the following:

 * sets the YAM_ROOT environment variable as the path to the sandbox
   Drun was run from.

 * determines and sets the YAM_NATIVE environment variable.

 * if undefined, attempts to set a default value of YAM_SITE. It is
   highly recommended that the user set YAM_SITE externally.

 * source the "etc/SiteDefs/sites/$YAM_SITE/Drun-site.sh" shell script
   if it exists for additional site specific environment settings.

 * augments the PATH environment variables to add paths to the
   YAM_ROOT/bin, YAM_ROOT/bin/YAM_TARGET areas.

 * augments LD_LIBRARY_PATH to add paths to the YAM_ROOT/lib,
   and YAM_ROOT/lib/YAM_TARGET areas.

 * locates a friendly front end program such as 'cle' or 'fep' if it
   exists and uses it to launch the specified program with its options.

The use of Drun thus relieves the user of directly setting environment
variables to point to areas within the sandbox. The temporary settings
created by Drun vanish when the program exits!

For Drun to work properly the user should export links (from
SiteDefs/Makefile.yam) for the following programs

  * SiteDefs/mkHome/auto/Drun
  * SiteDefs/mkHome/standard/yamroot
  * SiteDefs/mkHome/standard/locate

to the top-level bin/ directory. The purpose of these files is:

killprocs - kill all processes whose name contains any of the given arguments

locate - find an executable, sorta like 'which', but traces symbolic links

yamroot - script to determine YAM_ROOT starting from a directory
          or executable, by looking for YAM.config in parent directories

The user can add the 'Drun-site.sh' file to any of the sites/ site areas
to set up site specific environment variables. The user may well choose
to move the Drun family of files to a separate module to keep them
independent of the build related files in SiteDefs.


Customization approach
======================

It is very likely that the user will wish to add new settings and
definitions over and beyond those set by the auto-generated files from
the YaM install process. The user should feel free to modify and
customize any of the files in the SiteDefs directory EXCEPT the ones
in the mkHome/ area. The yamInstall script should be used to update the
contents of the mkHome/ area. The mkHome/ area contains broad
configuration settings which are best updated in a consistent manner via
yamInstall. Any feedback and suggestion on improving the definition of
these files is welcome.

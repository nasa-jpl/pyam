# this file defines site-specific paths etc. and is included by the
# Makefiles. It should be customized for each site.

USE_GCC295            = true

#==========================================================
# using egcs and not gcc 2.95 for Linux
ifeq ($(USE_GCC295),)
  USE_GCC295	      = false
endif

#==========================================================
# include site specific stuff
include $(SITEDEFSHOME)/sites/$(YAM_SITE)/site.local

#HAVE_MOTIF = false
USE_SITE_TERRAIN = false

# set up StethoScope values
SCOPEGCCEXT=
STETHOSCOPEHOME=$(RTIHOME)/scope.5.3c-linux2.2
RTILIBHOME=$(RTIHOME)/rtilib.4.0g-linux2.2
#STETHOSCOPEHOME=$(RTIHOME)/scope.6.0e-linux
#RTILIBHOME=$(RTIHOME)/rtilib.4.1f-linux

#==========================================================
#include $(SITEDEFSHOME)/site.common
include $(SITEDEFSHOME)/sites/site.gcc

#CC		= /usr/bin/gcc3
CC		= /opt/experimental/bin/gcc
#CPLUSPLUS	= /usr/bin/gcc3
CPLUSPLUS	= /opt/experimental/bin/gcc
F77		= /usr/bin/g77
LIBF77		= -lg2c

#LIBSTDCPP = -L/home/atbe/pkgs/lib/i486-linux -lstdc++
#LIBSTDCPP	= -lstdc++
LIBSTDCPP	= -L/opt/experimental/lib -lstdc++
#LIBSTDCPP	= /usr/lib/libstdc++.so.3
export LIBSTDCPP

#==========================================================
# are we building our own shared libraries?
ifeq ($(BUILDING_SHARED_LIBS),)
  BUILDING_SHARED_LIBS = true
endif
export BUILDING_SHARED_LIBS

ifeq ($(BUILDING_SHARED_LIBS),true)
  CC_COMPILE_FLAGS += $(SHARED_COMPILE_FLAG)
  CPLUSPLUS_COMPILE_FLAGS += $(SHARED_COMPILE_FLAG)
#  GCC_EXEC_PREFIX = /usr/lib/gcc-lib/i386-redhat-linux/3.0.4
  GCC_EXEC_PREFIX = /opt/experimental/bin
  LD_SHARED = $(CC) -shared -L$(YAM_ROOT)/lib/$(YAM_NATIVE)-shared -L$(YAM_ROOT)/lib/$(YAM_NATIVE) -L$(GCC_EXEC_PREFIX)
  export LD_SHARED
#  CC_EXTRA_SHLIB = -lgcc
  CC_EXTRA_SHLIB = -L/opt/experimental/lib/gcc-lib/i486-suse-linux/3.0.3 -lgcc
#  CC_EXTRA_SHLIB = /usr/lib/libgcc_s.so
  export CC_EXTRA_SHLIB
endif

#CPLUSPLUS_COMPILE_FLAGS += -I/usr/include -I/home/atbe/pkgs/lib/i486-linux/g++-include
#CPLUSPLUS_COMPILE_FLAGS += -I/usr/include -I/usr/include/g++

#==========================================================


ifneq ($(USE_SHARED_LIBS),false)
# SHARED_LIBDIR = /usr/lib
 export SHARED_LIBDIR = .
# CC_LINK_FLAGS += -L$(SHARED_LIBDIR) -Xlinker -rpath-link -Xlinker $(YAM_ROOT)/lib/$(YAM_NATIVE)
 CC_LINK_FLAGS += -L$(SHARED_LIBDIR)
# CPLUSPLUS_LINK_FLAGS += -L$(SHARED_LIBDIR) -Xlinker -rpath-link -Xlinker $(YAM_ROOT)/lib/$(YAM_NATIVE)
 CPLUSPLUS_LINK_FLAGS += -L$(SHARED_LIBDIR)
endif


#==========================================================
# for X11
export X11_INCDIR       = -I/usr/X11R6/include
export X11_LIBDIR       = /usr/X11R6/lib

#==========================================================
  # for TCL
  TCLSH			:= /usr/bin/tclsh
  export HAVE_TCL		= true
#  export TCL_LIBDIR	= /home/atbe/pkgs/lib/i486-linux-shared
#  export TCL_INCDIR	= -I/home/atbe/pkgs/include/tcl8.0
#  export TCL_LIBS	= -L$(TCL_LIBDIR) -ltcl8.0 -ldl -lm
  export TCL_LIBDIR	= /usr/lib
  export TCL_INCDIR	= -I/usr/include
#  export TCL_LIBS	= -ltcl8.3 -ldl -lm
export TCL_LIBS	=  -L/home/wagnermd/SWIG/lib -ltcl8.3 -ldl -lm

  # for TK
  export HAVE_TK		= true
#  export TK_LIBDIR	= $(TCL_LIBDIR)
#  export TK_INCDIR	= $(TCL_INCDIR)
#  export TK_LIBS	= -L$(TK_LIBDIR) -ltk8.0 -L$(X11_LIBDIR) -lX11 $(TCL_LIBS)
  export TK_LIBDIR	=
  export TK_INCDIR	=
  export TK_LIBS	= -ltk8.3 -L$(X11_LIBDIR) -lX11 $(TCL_LIBS)

  # for TIX
  export HAVE_TIX       = true
#  export TIX_LIBDIR     = $(TCL_LIBDIR)
  export TIX_INCDIR     = -I/home/atbe/pkgs/include/tix8.2/generic
#  export TIX_LIBS       = -L$(TIX_LIBDIR) -ltix4.1.8.0 $(TK_LIBS)
  export TIX_LIBDIR	=
#  export TIX_INCDIR	= -I/home/atbe/pkgs/include/tix8.2/generic
#  export TIX_LIBS       =  -ltix4.1.8.3 $(TK_LIBS)
  export TIX_LIBS       =  -ltix $(TK_LIBS)
#  export TIX_LIBS       =  -ltix $(TK_LIBS)

#==========================================================
# Motif flags (using LessTif)
#export MOTIF_LIBS = -L/usr/X11R6/lib -L/usr/X11R6/LessTif/Motif2.0/lib -lXm
export MOTIF_LIBS = -L/usr/X11R6/lib  -lXm -lXp
#export MOTIF_INCDIR = -I/usr/X11R6/LessTif/Motif2.0/include
export MOTIF_INCDIR = -I/usr/X11R6/include

#==========================================================
# for Mesa
MESA_DIR = /home/atbe/pkgs/src/Mesa/Mesa-3.0-linux

#==========================================================
# Doxygen flags
export HAVE_DOXYGEN = true
#export DOXYGEN	    = /usr/bin/doxygen
export DOXYGEN	    = /home/atbe/pkgs/src/doxygen/doxygen-1.2.18-20021020-i486-linux/bin/doxygen -d Validate

#==========================================================
# for OpenInventor
export HAVE_IV		= true
#IV_VERSION		= 2.1.5-7
#export IV_INCDIR	= /home/atbe/pkgs/include/Inventor-$(IV_VERSION)

# built with gcc3
IV_DIR			= /home/atbe/pkgs/src/OpenInventor/OpenInventor-2.1.5-9-i486-linux
export IV_INCDIR	=  $(IV_DIR)/include
export IV_CFLAGS	=

#IV_LIB_DIR		= /home/atbe/pkgs/lib/$(YAM_TARGET)
IV_LIB_DIR		= $(IV_DIR)/lib
#export IV_LIB		= $(IV_LIB_DIR)/libInventor.so
#export IV_XT_LIB	= $(IV_DIR)/lib/libInventorXt.so
#export IV_FL_LIB	= -lFL-$(IV_VERSION)
#export IV_IMG_LIB	= -limage-$(IV_VERSION)
export IV_LIB		= $(IV_LIB_DIR)/libInventor.so
export IV_XT_LIB	= $(IV_DIR)/lib/libInventorXt.so
export IV_FL_LIB	=
export IV_IMG_LIB	=
export JPEG_LIBS	= -ljpeg

export GL_LIBS		= -lGL -lGLU

export IV_LIBS		= $(IV_XT_LIB) $(IV_LIB) $(IV_FL_LIB) \
			  $(IV_IMG_LIB) $(JPEG_LIBS) $(GL_LIBS)

#==========================================================
# for SWIG
#SWIG	:= /usr/bin/swig
#SWIG	:= /home/atbe/pkgs/src/SWIG/SWIG-1.3.16-i486-linux/swig
SWIG	:= /home/wagnermd/SWIG/bin/swig

#==========================================================
# for HLA

export RTI_HOME=/home/wagnermd/HLA/RTI-1.3NGv6
export RTI_BUILD_TYPE=Linux-rh7.2-i386-gcc-3.0.2-opt-mt
export RTI_RID_FILE=${YAM_ROOT}/src/MsfRoamsComponent/RTI.rid
ifeq ("${USER}","wagnermd")
  RTI_RID_FILE=${YAM_ROOT}/src/MsfRoamsComponent/RTI.rid-wagnermd
  RTI_ENDPOINT=-multicastDiscoveryEndpoint 224.9.9.2:12555
endif
ifeq ("${USER}","cneukom")
  RTI_RID_FILE=/home/cneukom/MSF/RTI.rid.chris
  RTI_ENDPOINT=-multicastDiscoveryEndpoint 224.0.0.2:12345
endif

export RTI_ENDPOINT
export MSF_HOME=/home/wagnermd/MSF2/MSF
export MSF_MODELS_PATH=${YAM_ROOT}/lib/AmesMSF_3DModels
export MSF_FEDFILE_PATH=${MSF_HOME}/COMv2
export VR_PACKAGE_ROOT=NOT_SET
export VR_ROOT=${VR_PACKAGE_ROOT}/Viz/VR
export QTDIR=${VR_PACKAGE_ROOT}/QT
export IVROOT=${VR_PACKAGE_ROOT}/OIV/Inventor/inventor/usr

LD_LIBRARY_PATH:="/opt/experimental/lib:${MSF_HOME}/lib/Linux:${RTI_HOME}/${RTI_BUILD_TYPE}/lib:${IVROOT}/lib:${MSF_HOME}/lib/Linux:${VR_ROOT}/Linux/lib:${QTDIR}/lib:${LD_LIBRARY_PATH}:/usr/X11R6/lib"

#==========================================================
# for TRAMEL
export HAVE_TRAMEL	= false
export TRAMEL_INCDIR	=
export TRAMEL_LIBDIR	=
export TRAMEL_LIBS	=

#==========================================================
# for RTI's Stethoscope
SCOPE_LIBS += -lpthread
#SCOPE_LIBS := $(STETHOSCOPEHOME)/lib/$(RTI_TARGET)$(SCOPEGCCEXT)/libscopez.a \
#                $(RTILIBHOME)/lib/$(RTI_TARGET)$(SCOPEGCCEXT)/libutilsipz.a -lpthread

#==========================================================
# for RTI's NDDS
export HAVE_NDDS	= false
export NDDS_INCDIR	=
export NDDS_LIBS	=

#==========================================================
# for Matlab
export HAVE_MATLAB	= false
export HAVE_SIMULINK    = false
export HAVE_RTW         = false
export MATLAB		=
export MATLAB_INCDIR    = -I$(MATLAB)/extern/include
export SIMULINK_INCDIR  = $(MATLAB_INCDIR) -I$(MATLAB)/simulink/include
export RTW_INCDIR       = $(SIMULINK_INCDIR) -I$(MATLAB)/rtw/c/libsrc -I$(MATLAB)/rtw/c/src
export MATLAB_LIBDIR    =
export MATLAB_LIBS	=

# This compile flag is set in src/Dshell++Scripts/Makefile and causes
# trouble on Suse with gcc 3.0.4
# resetting it
FEXTERNAL_TEMPLATES :=

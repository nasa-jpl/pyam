# this file defines site-specific paths etc. and is included by the
# Makefiles. It should be customized for each site.

# define early since it is referred to by shared.mk
TORNADO_VERSION		:= 1.0

#==========================================================
# include site specific stuff
include $(SITEDEFSHOME)/sites/$(YAM_SITE)/site.local

#==========================================================
#include $(SITEDEFSHOME)/site.common
include $(SITEDEFSHOME)/sites/site.gcc

#===========================================
#WIND_BASE = /home/vxconf/wind1.0.1
#WIND_BASE = /home/pdm/wind1.0.1_m68k

# need to export the following since wtxtcl needs it
export WIND_BASE	       = /home/pdm/wind1.0.1_m68k
export WIND_HOST_TYPE   :=  sun4-solaris2

WIND_BIN = $(WIND_BASE)/host/$(WIND_HOST_TYPE)/m68k-wrs-vxworks/bin
export GCC_EXEC_PREFIX = $(WIND_BASE)/host/$(WIND_HOST_TYPE)/lib/gcc-lib/

# need to do this because gcc otherwise uses the wrong cpp and cc1
# binaries
export PATH := $(GCC_EXEC_PREFIX)m68k-wrs-vxworks/cygnus-2.7.2-960126/$(PATH)

# needed so that wtxtcl can be found
#export PATH	      := $(PATH):$(WIND_BASE)/host/$(WIND_HOST_TYPE)/bin

# needed for munching C++ code
#export NM	     := $(WIND_BIN)/nm
#export WTXTCL	     := $(WIND_BASE)/host/$(WIND_HOST_TYPE)/bin/wtxtcl $(WIND_BASE)/host/src/hutils/munch.tcl \
			     -asm m68

#===========================================
# C compiler and flags for the native target

export CC		= $(WIND_BIN)/gcc -ansi -pedantic
export CC_DEPEND_FLAG	= -MM
export CC_INCLUDES	:= -I$(YAM_ROOT)/include \
                -I$(WIND_BASE)/target/h \
                -I$(WIND_BASE)/host/include

export CC_DEFINES	= -DVXWORKS -DCPU=MC68040
export CC_WARNINGS	= -Wall -Wmissing-prototypes -Waggregate-return
export CC_OPTIMIZATION	= -ggdb3
export CC_LIBS		:= $(GCC_EXEC_PREFIX)m68k-wrs-vxworks/cygnus-2.7.2-960126/libgcc.a


#export CC_COMPILE_FLAGS	= $(CC_OPTIMIZATION) \
#			   $(CC_WARNINGS) $(CC_DEFINES) $(CC_INCLUDES)
#export CC_LINK_FLAGS	= $(CC_OPTIMIZATION) -L$(YAM_ROOT)/lib/$(YAM_TARGET)

#CC_OPTIM_CFLAGS	= -ggdb3
#SYS_INCLUDE_FLAGS	=
#export GCC_EXEC_PREFIX =

#==========================================================
# C++ compiler and flags for the native target

CPLUSPLUS= $(CC)
#RTIHOME=/home/atbe/pkgs/src/rti
#gnuPath = $(RTIHOME)/gnu/sparcSol2-m68k
#gnuBin = $(gnuPath)/bin
#RTI_GCC_EXEC_PREFIX = $(gnuPath)/lib/gcc-lib/

#export CPLUSPLUS = $(gnuBin)/gcc -B$(RTI_GCC_EXEC_PREFIX) -m68020-40
export CPLUSPLUS_DEPEND_FLAG	= $(CC_DEPEND_FLAG)
export CPLUSPLUS_INCLUDES	:= $(CC_INCLUDES)
export CPLUSPLUS_DEFINES	= $(CC_DEFINES)
export CPLUSPLUS_WARNINGS	= $(CC_WARNINGS) -Woverloaded-virtual -Wno-unused -Wno-aggregate-return
export CPLUSPLUS_OPTIMIZATION	= -O3
#-fno-default-inline -finline-functions
#export CPLUSPLUS_LIBS		:= $(CC_LIBS)

#export CPLUSPLUS_COMPILE_FLAGS = $(CPLUSPLUS_OPTIMIZATION) $(CPLUSPLUS_DEFINES) \
#				    $(CPLUSPLUS_WARNINGS) $(CPLUSPLUS_INCLUDES)
#export CPLUSPLUS_LINK_FLAGS    = -g -L$(YAM_ROOT)/lib/$(YAM_TARGET)


#CPLUSPLUS_OPTIM_CFLAGS = -DSUNOS5

#==========================================================
export AR	= $(WIND_BIN)/ar
export LD	= $(WIND_BIN)/ld
export RANLIB	= $(WIND_BIN)/ranlib

#==========================================================
# for TCL
#export TCL_LIBS		= $(TCL_LIBDIR)/libTclvx.ro
export TCL_INCDIR       = -I$(WIND_BASE)/host/include

# for TK
export HAVE_TK		=

# for TK
export HAVE_TIX		=

#==========================================================
# for TRAMEL

#==========================================================
# for RTI's Stethoscope
export SCOPE_LIBS	=

#==========================================================
# for RTI's NDDS
export NDDS_LIBS	=
